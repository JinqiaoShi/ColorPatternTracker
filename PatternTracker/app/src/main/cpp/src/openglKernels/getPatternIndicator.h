static const char *getPatternIndicator_kernel =
"#version 310 es\n"
"#define LOCAL_SIZE 1\n"
"\n"
"#extension GL_ANDROID_extension_pack_es31a : require\n"
"layout(local_size_x = LOCAL_SIZE, local_size_y = LOCAL_SIZE) in;\n"
"layout(binding=0, rgba32f) uniform mediump readonly image2D input_image;\n"
"layout(std430, binding = 2) buffer pts_ssbo {float pts[];};\n"
"void main()\n"
"{\n"
"\t\tivec2 pos;\n"
"\t\tvec4 pixelf;\n"
"\t\t\n"
"\t\tpixelf.x = 0.0;\n"
"\t\tpixelf.y = 0.0;\n"
"\t\tpixelf.z = 0.0;\n"
"\t\tpixelf.w = 1.0;\n"
"\t\t\n"
"\t\tint id = int(gl_GlobalInvocationID.x);\n"
"\t\t\n"
"\t\tint x,y;\n"
"\t\tpos.y=int(floor(pts[2*id]+0.5));\n"
"\t\tpos.x=int(floor(pts[2*id+1]+0.5)); \n"
"\n"
"\t\t// -1 is white\n"
"\t\t// -2 is black\n"
"\t\t// -3 is undefined\n"
"\t\tfloat brightest_col=-1.0;\n"
"\t\tfloat brightest_col2=-1.0;\n"
"\t\tif(pos.y>=0 && pos.y<1080 && pos.x>=0 && pos.x<1920){\n"
"		pixelf = imageLoad(input_image, pos);\n"
"\t\t\t\t//pixelf = read_imagef(input_image, sampler, pos);\n"
"\t\t\t\tfloat gr = (pixelf.x + pixelf.y + pixelf.z)/3.0;\n"
"\t\t\t\tif(gr>0.99)gr=0.99;\n"
"\t\t\t\t\t\tif(pixelf.x>=pixelf.y && pixelf.y>=pixelf.z){\n"
"\t\t\t\t\t\t\t\tbrightest_col=pixelf.x;\n"
"\t\t\t\t\t\t\t\tbrightest_col2=pixelf.y;\n"
"\t\t\t\t\t\t}\n"
"\t\t\t\t\t\tif(pixelf.x>=pixelf.z && pixelf.z>=pixelf.y){\n"
"\t\t\t\t\t\t\t\tbrightest_col=pixelf.x;\n"
"\t\t\t\t\t\t\t\tbrightest_col2=pixelf.z;\n"
"\t\t\t\t\t\t}\n"
"\t\t\t\t\t\tif(pixelf.y>=pixelf.x && pixelf.x>=pixelf.z){\n"
"\t\t\t\t\t\t\t\tbrightest_col=pixelf.y;\n"
"\t\t\t\t\t\t\t\tbrightest_col2=pixelf.x;\n"
"\t\t\t\t\t\t\t\tgr = gr+1.0;\n"
"\t\t\t\t\t\t}\n"
"\t\t\t\t\t\tif(pixelf.y>=pixelf.z && pixelf.z>=pixelf.x){\n"
"\t\t\t\t\t\t\t\tbrightest_col=pixelf.y;\n"
"\t\t\t\t\t\t\t\tbrightest_col2=pixelf.z;\n"
"\t\t\t\t\t\t\t\tgr = gr+1.0;\n"
"\t\t\t\t\t\t}\n"
"\t\t\t\t\t\tif(pixelf.z>=pixelf.x && pixelf.x>=pixelf.y){\n"
"\t\t\t\t\t\t\t\tbrightest_col=pixelf.z;\n"
"\t\t\t\t\t\t\t\tbrightest_col2=pixelf.x;\n"
"\t\t\t\t\t\t\t\tgr = gr+2.0;\n"
"\t\t\t\t\t\t}\n"
"\t\t\t\t\t\tif(pixelf.z>=pixelf.y && pixelf.y>=pixelf.x){\n"
"\t\t\t\t\t\t\t\tbrightest_col=pixelf.z;\n"
"\t\t\t\t\t\t\t\tbrightest_col2=pixelf.y;\n"
"\t\t\t\t\t\t\t\tgr = gr+2.0;\n"
"\t\t\t\t\t\t}\t \n"
"\t\t\t\t\t\tpts[2*id]=gr;\t\t\t\t \n"
"\t\t\t\t\t\tpts[2*id+1]=(brightest_col-brightest_col2)/gr;\t \n"
"\t\t\t\t}else{\n"
"\t\t\t\t\t\tpts[2*id]=-1.0;\n"
"\t\t\t\t\t\tpts[2*id+1]=-1.0;\n"
"\t\t}\n"
"}\n";
